#!/usr/local/bin/smsh

@python3 -c
Click:
	import pyautogui
	pyautogui.mouseDown(%args%, 'left')

@python3 -c
Press:
	import pyautogui
	pyautogui.hotkey(%args%)
	#echo Button %args% was pressed

@python3 -c
Type:
	import pyautogui
	pyautogui.write('%args%')
	#echo Sequence of characters %args% was simulated on keyboard

Open async:
	xfce4-terminal -e %args%

Screenshot:
	Open async xfce4-screenshooter
	Press 'Up'
	Press 'Up'
	Press 'Up'
	Press 'Enter'
	sleep 2
	Press 'Up'
	Press 'Up'
	Press 'Up'
	Press 'Down'
	Press 'Enter'

Exit screenshot window:
	Press 'Alt', 'F4' 

Wait:
	sleep %args%

@python3 -c
get user input:
	import tkinter as tk
	from tkinter import simpledialog
	application_window = tk.Tk()
	application_window.withdraw()
	answer = simpledialog.askstring('Input', '%args%', parent=application_window)


clear file and ENV cache:
	rm output.html
	echo > ENV

display on webpage:
	#backslash in graph for pflow's sake
	echo \"<html><body>$(vexport %args%)</body></html>" > output.html
	exo-open --launch WebBrowser output.html &

@python3 -c
get user input:
	import tkinter as tk
	from tkinter import simpledialog
	application_window = tk.Tk()
	application_window.withdraw()
	answer = simpledialog.askstring('Input', '%args%', parent=application_window)
	open('ENV', 'a').write(f'%args%={answer}\n')

run python model on:
	python3 ./test_model.py "$(vexport %args%)"

call api ?=:
	run python model on %args%

# __main__
clear file and ENV cache
get user input USER_INPUT
call api ?= USER_INPUT
display on webpage RENDERED_TEXT

# âœ…
